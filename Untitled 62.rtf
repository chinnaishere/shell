{\rtf1\ansi\ansicpg1252\cocoartf1265
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0  int fd[cmdsSize-1][2];\
         //initializes pipe array\
                int k;\
        for(k = 0; k < (cmdsSize-1); k++)\{\
            fd[k][0] = 0;\
            fd[k][1] = 0;\
        \}\
        //if there is only one command, no pipes are needed\
        if(cmdsSize == 1)\{\
            runonecmd(&cmds[0]);\
        \}else\{\
            //open and close pipes for every command\
            while(currcmd < cmdsSize)\{\
                if(currcmd == 0)\{\
                    printf("calling source\\n");\
                    pipe(fd[currcmd]);\
                    runcmd(-1, fd[currcmd][1], &cmds[currcmd]);\
                    close(fd[currcmd][1]);\
                \}else if(currcmd != (cmdsSize-1))\{\
                    pipe(fd[currcmd]);\
                    runcmd(fd[currcmd-1][0], fd[currcmd][1], &cmds[currcmd]);\
                    close(fd[currcmd-1][0]);\
                    close(fd[currcmd][1]);\
                \}else\{\
                    printf("calling destination\\n");\
                    runcmd(fd[currcmd-1][0], -1, &cmds[currcmd]);\
                    close(fd[currcmd-1][0]);\
                \}\
                currcmd++;\
            \}\
            //closes all pipes\
                        int j;\
            for(j = 0; j < (cmdsSize-1); j++)\{\
                close(fd[j][0]);\
                close(fd[j][1]);\
            \}\
        \}\
\
        //pick up all dead children and print process status\
        while ((pid = wait(&status)) != -1)\{\
            fprintf(stderr, "process %d exits with %d\\n", pid, WEXITSTATUS(status));\
        \}}